#!/bin/bash

# Script de Demonstra√ß√£o - Trabalho de Sistemas Operacionais
# Autor: Lizandra Pinheiro
# Data: 26 de Junho de 2025

clear
echo "=================================================="
echo "  DEMONSTRA√á√ÉO - TRABALHO DE SISTEMAS OPERACIONAIS"
echo "  Prof. Pedro Botelho - UFC Campus Quixad√°"
echo "=================================================="
echo

# Fun√ß√£o para pausar e continuar
pause() {
    echo -e "\n>>> Pressione ENTER para continuar..."
    read
    clear
}

# Compilar todos os programas
echo "üî® COMPILANDO TODOS OS PROGRAMAS..."
echo "-----------------------------------"

echo "Compilando Quest√£o 1a (3 produtores, 1 consumidor)..."
gcc -Wall -Wextra -std=c99 -O2 q1a.c -o q1a -lpthread
if [ $? -eq 0 ]; then
    echo "‚úÖ q1a compilado com sucesso!"
else
    echo "‚ùå Erro na compila√ß√£o de q1a"
    exit 1
fi

echo "Compilando Quest√£o 1g (6 produtores, 2 consumidores)..."
gcc -Wall -Wextra -std=c99 -O2 q1g.c -o q1g -lpthread
if [ $? -eq 0 ]; then
    echo "‚úÖ q1g compilado com sucesso!"
else
    echo "‚ùå Erro na compila√ß√£o de q1g"
    exit 1
fi

echo "Compilando Quest√£o 2a (Leibniz sequencial)..."
gcc -Wall -Wextra -std=c99 -O2 q3_1.c -o q3_1
if [ $? -eq 0 ]; then
    echo "‚úÖ q3_1 compilado com sucesso!"
else
    echo "‚ùå Erro na compila√ß√£o de q3_1"
    exit 1
fi

echo "Compilando Quest√£o 2b (Leibniz paralelo)..."
gcc -Wall -Wextra -std=c99 -O2 q3_2.c -o q3_2 -lpthread
if [ $? -eq 0 ]; then
    echo "‚úÖ q3_2 compilado com sucesso!"
else
    echo "‚ùå Erro na compila√ß√£o de q3_2"
    exit 1
fi

echo "Compilando Quest√£o 2f (An√°lise de performance)..."
gcc -Wall -Wextra -std=c99 -O2 q2f_analysis.c -o q2f_analysis -lpthread
if [ $? -eq 0 ]; then
    echo "‚úÖ q2f_analysis compilado com sucesso!"
else
    echo "‚ùå Erro na compila√ß√£o de q2f_analysis"
    exit 1
fi

echo -e "\nüéâ TODOS OS PROGRAMAS COMPILADOS COM SUCESSO!"
pause

# ============================================
# QUEST√ÉO 1A - PRODUTOR-CONSUMIDOR B√ÅSICO
# ============================================
echo "üìã QUEST√ÉO 1A - PRODUTOR-CONSUMIDOR (3P + 1C)"
echo "=============================================="
echo "Caracter√≠sticas:"
echo "‚Ä¢ 3 threads produtoras"
echo "‚Ä¢ 1 thread consumidora"
echo "‚Ä¢ Buffer de 5 posi√ß√µes"
echo "‚Ä¢ Sincroniza√ß√£o com mutex + sem√°foros + condi√ß√µes"
echo "‚Ä¢ Produtores geram valores 1-1000 reais"
echo "‚Ä¢ Consumidor calcula m√©dia quando buffer cheio"
echo
echo "üöÄ EXECUTANDO..."
echo "----------------"

timeout 30 ./q1a

echo -e "\n‚úÖ Quest√£o 1a finalizada!"
pause

# ============================================
# QUEST√ÉO 1G - PRODUTOR-CONSUMIDOR AVAN√áADO
# ============================================
echo "üìã QUEST√ÉO 1G - PRODUTOR-CONSUMIDOR (6P + 2C)"
echo "=============================================="
echo "Caracter√≠sticas:"
echo "‚Ä¢ 6 threads produtoras"
echo "‚Ä¢ 2 threads consumidoras"
echo "‚Ä¢ Mesmo buffer de 5 posi√ß√µes"
echo "‚Ä¢ Competi√ß√£o entre consumidores"
echo "‚Ä¢ Sincroniza√ß√£o mais complexa"
echo
echo "Desafios adicionais:"
echo "‚Ä¢ pthread_cond_broadcast ao inv√©s de signal"
echo "‚Ä¢ Controle de m√∫ltiplos consumidores"
echo "‚Ä¢ Preven√ß√£o de condi√ß√µes de corrida"
echo
echo "üöÄ EXECUTANDO..."
echo "----------------"

timeout 30 ./q1g

echo -e "\n‚úÖ Quest√£o 1g finalizada!"
pause

# ============================================
# QUEST√ÉO 2A - LEIBNIZ SEQUENCIAL  
# ============================================
echo "üìä QUEST√ÉO 2A - S√âRIE DE LEIBNIZ SEQUENCIAL"
echo "==========================================="
echo "Caracter√≠sticas:"
echo "‚Ä¢ C√°lculo de œÄ usando f√≥rmula de Leibniz"
echo "‚Ä¢ 2.000.000.000 termos"
echo "‚Ä¢ Processamento sequencial"
echo "‚Ä¢ Medi√ß√£o de tempo de execu√ß√£o"
echo
echo "F√≥rmula: œÄ = 4 √ó (1 - 1/3 + 1/5 - 1/7 + 1/9 - ...)"
echo
echo "üöÄ EXECUTANDO (pode demorar alguns segundos)..."
echo "-----------------------------------------------"

./q3_1

echo -e "\n‚úÖ Quest√£o 2a finalizada!"
pause

# ============================================
# QUEST√ÉO 2B - LEIBNIZ PARALELO
# ============================================
echo "üìä QUEST√ÉO 2B - S√âRIE DE LEIBNIZ PARALELO"
echo "========================================="
echo "Caracter√≠sticas:"
echo "‚Ä¢ Mesmo c√°lculo, mas com 16 threads"
echo "‚Ä¢ Divis√£o do trabalho: $(echo "2000000000/16" | bc) termos por thread"
echo "‚Ä¢ Sincroniza√ß√£o com mutex"
echo "‚Ä¢ Medi√ß√£o individual de cada thread"
echo "‚Ä¢ C√°lculo de speedup e efici√™ncia"
echo
echo "üöÄ EXECUTANDO..."
echo "----------------"

./q3_2

echo -e "\n‚úÖ Quest√£o 2b finalizada!"
pause

# ============================================
# QUEST√ÉO 2F - AN√ÅLISE DE PERFORMANCE
# ============================================
echo "üìà QUEST√ÉO 2F - AN√ÅLISE DE PERFORMANCE"
echo "======================================"
echo "Caracter√≠sticas:"
echo "‚Ä¢ Teste com diferentes n√∫meros de threads"
echo "‚Ä¢ Compara√ß√£o: 2, 4, 8, 16, 32, 64, 128 threads"
echo "‚Ä¢ An√°lise de speedup e efici√™ncia"
echo "‚Ä¢ Identifica√ß√£o do ponto √≥timo"
echo
echo "M√©tricas avaliadas:"
echo "‚Ä¢ Tempo de execu√ß√£o"
echo "‚Ä¢ Speedup = Tempo_sequencial / Tempo_paralelo"
echo "‚Ä¢ Efici√™ncia = Speedup / N√∫mero_threads √ó 100%"
echo
echo "üöÄ EXECUTANDO AN√ÅLISE COMPLETA..."
echo "--------------------------------"

./q2f_analysis

echo -e "\n‚úÖ An√°lise completa finalizada!"
pause

# ============================================
# RESUMO E CONCLUS√ïES
# ============================================
echo "üìã RESUMO DOS RESULTADOS"
echo "========================"
echo
echo "üîπ QUEST√ÉO 1 - PRODUTOR-CONSUMIDOR:"
echo "   ‚úì Implementa√ß√£o correta com sincroniza√ß√£o"
echo "   ‚úì Tratamento de m√∫ltiplos produtores/consumidores"
echo "   ‚úì Uso adequado de mutex, sem√°foros e condi√ß√µes"
echo
echo "üîπ QUEST√ÉO 2 - PARALELIZA√á√ÉO:"
echo "   ‚úì Speedup significativo com paraleliza√ß√£o"
echo "   ‚úì Ponto √≥timo pr√≥ximo ao n√∫mero de cores do sistema"
echo "   ‚úì Degrada√ß√£o com excesso de threads (overhead)"
echo
echo "üéì CONCEITOS DEMONSTRADOS:"
echo "   ‚Ä¢ Sincroniza√ß√£o de threads"
echo "   ‚Ä¢ Problemas cl√°ssicos (Produtor-Consumidor)"
echo "   ‚Ä¢ An√°lise de performance paralela"
echo "   ‚Ä¢ Trade-offs entre paraleliza√ß√£o e overhead"
echo
echo "üìä INFORMA√á√ïES DO SISTEMA:"
echo "   ‚Ä¢ Cores dispon√≠veis: $(nproc)"
echo "   ‚Ä¢ Compilador: $(gcc --version | head -n1)"
echo "   ‚Ä¢ Data da execu√ß√£o: $(date)"
echo
echo "=================================================="
echo "        DEMONSTRA√á√ÉO CONCLU√çDA COM SUCESSO!"
echo "=================================================="
echo
echo "Obrigado pela aten√ß√£o, Professor Pedro Botelho!"
echo

